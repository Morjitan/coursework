#!/usr/bin/env python3
import asyncio
import sys
import os

sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from database import get_database
from database.models import User, Streamer, Donation
from sqlalchemy import delete, select, func

async def clear_all_data():
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    print("=" * 50)
    
    try:
        db = await get_database()
        await db.connect()
        
        async with db.get_session() as session:
            
            users_count = await session.scalar(select(func.count(User.id)))
            streamers_count = await session.scalar(select(func.count(Streamer.id)))
            donations_count = await session.scalar(select(func.count(Donation.id)))
            
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ –æ—á–∏—Å—Ç–∫–∏:")
            print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {users_count}")
            print(f"   üëë –°—Ç—Ä–∏–º–µ—Ä—ã: {streamers_count}")
            print(f"   üí∞ –î–æ–Ω–∞—Ç—ã: {donations_count}")
            print()
            
            if users_count == 0 and streamers_count == 0 and donations_count == 0:
                print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ –ø—É—Å—Ç–∞!")
                return
            
            print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –í–°–ï –¥–∞–Ω–Ω—ã–µ!")
            response = input("–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ").strip()
            
            if response != 'YES':
                print("‚ùå –û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
                return
            
            print("\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
            
            print("   üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–æ–≤...")
            result = await session.execute(delete(Donation))
            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –¥–æ–Ω–∞—Ç–æ–≤: {result.rowcount}")
            
            print("   üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–∏–º–µ—Ä–æ–≤...")
            result = await session.execute(delete(Streamer))
            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–∏–º–µ—Ä–æ–≤: {result.rowcount}")
            
            print("   üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
            result = await session.execute(delete(User))
            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {result.rowcount}")
            
            await session.commit()
            
            print("\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
            print("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
        
        await db.disconnect()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()

async def clear_specific_table():
    print("üéØ –í—ã–±–æ—Ä–æ—á–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 40)
    print("–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –æ—á–∏—Å—Ç–∏—Ç—å:")
    print("1. –¢–æ–ª—å–∫–æ –¥–æ–Ω–∞—Ç—ã")
    print("2. –¢–æ–ª—å–∫–æ —Å—Ç—Ä–∏–º–µ—Ä—ã (–∏ –∏—Ö –¥–æ–Ω–∞—Ç—ã)")
    print("3. –¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
    print("4. –í—Å—ë (–ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞)")
    print("5. –û—Ç–º–µ–Ω–∞")
    
    choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-5): ").strip()
    
    try:
        db = await get_database()
        await db.connect()
        
        async with db.get_session() as session:
            if choice == "1":
                print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ–Ω–∞—Ç–æ–≤...")
                result = await session.execute(delete(Donation))
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –¥–æ–Ω–∞—Ç–æ–≤: {result.rowcount}")
                
            elif choice == "2":
                print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–Ω–∞—Ç–æ–≤...")
                result = await session.execute(delete(Donation))
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –¥–æ–Ω–∞—Ç–æ–≤: {result.rowcount}")
                
                print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–∏–º–µ—Ä–æ–≤...")
                result = await session.execute(delete(Streamer))
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å—Ç—Ä–∏–º–µ—Ä–æ–≤: {result.rowcount}")
                
            elif choice == "3":
                print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
                result = await session.execute(delete(User))
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {result.rowcount}")
                
            elif choice == "4":
                await clear_all_data()
                return
                
            elif choice == "5":
                print("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ.")
                return
                
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")
                return
            
            await session.commit()
            print("‚úÖ –í—ã–±–æ—Ä–æ—á–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
        await db.disconnect()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def show_database_stats():
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 30)
    
    try:
        db = await get_database()
        await db.connect()
        
        async with db.get_session() as session:
            users_count = await session.scalar(select(func.count(User.id)))
            streamers_count = await session.scalar(select(func.count(Streamer.id)))
            active_streamers_count = await session.scalar(
                select(func.count(Streamer.id)).where(Streamer.is_active == True)
            )
            donations_count = await session.scalar(select(func.count(Donation.id)))
            
            print(f"üë§ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
            print(f"üëë –í—Å–µ–≥–æ —Å—Ç—Ä–∏–º–µ—Ä–æ–≤: {streamers_count}")
            print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∏–º–µ—Ä–æ–≤: {active_streamers_count}")
            print(f"‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∏–º–µ—Ä–æ–≤: {streamers_count - active_streamers_count}")
            print(f"üí∞ –í—Å–µ–≥–æ –¥–æ–Ω–∞—Ç–æ–≤: {donations_count}")
            
            if donations_count > 0:
                confirmed_donations = await session.scalar(
                    select(func.count(Donation.id)).where(Donation.status == 'confirmed')
                )
                pending_donations = await session.scalar(
                    select(func.count(Donation.id)).where(Donation.status == 'pending')
                )
                print(f"   ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö: {confirmed_donations}")
                print(f"   ‚è≥ –û–∂–∏–¥–∞—é—â–∏—Ö: {pending_donations}")
        
        await db.disconnect()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    print("üóÉÔ∏è –£—Ç–∏–ª–∏—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 40)
    print("1. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    print("2. –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (—É–¥–∞–ª–∏—Ç—å –≤—Å—ë)")
    print("3. –í—ã–±–æ—Ä–æ—á–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞")
    print("4. –í—ã—Ö–æ–¥")
    
    choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ").strip()
    
    if choice == "1":
        asyncio.run(show_database_stats())
    elif choice == "2":
        asyncio.run(clear_all_data())
    elif choice == "3":
        asyncio.run(clear_specific_table())
    elif choice == "4":
        print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.")

if __name__ == "__main__":
    main() 